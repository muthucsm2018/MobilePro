//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MobilePro
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Acc_SalesBill> Acc_SalesBill { get; set; }
        public DbSet<Acc_SalesPayments> Acc_SalesPayments { get; set; }
        public DbSet<Acc_Vendors> Acc_Vendors { get; set; }
        public DbSet<Brands> Brands { get; set; }
        public DbSet<Categories> Categories { get; set; }
        public DbSet<Colors> Colors { get; set; }
        public DbSet<Company> Company { get; set; }
        public DbSet<CompanyUsers> CompanyUsers { get; set; }
        public DbSet<Condition> Condition { get; set; }
        public DbSet<Employees> Employees { get; set; }
        public DbSet<ExpenseVendors> ExpenseVendors { get; set; }
        public DbSet<Fault> Fault { get; set; }
        public DbSet<Items> Items { get; set; }
        public DbSet<Models> Models { get; set; }
        public DbSet<OutSources> OutSources { get; set; }
        public DbSet<Products> Products { get; set; }
        public DbSet<SalesBill> SalesBill { get; set; }
        public DbSet<SalesStocks> SalesStocks { get; set; }
        public DbSet<security_Pages> security_Pages { get; set; }
        public DbSet<security_RolePages> security_RolePages { get; set; }
        public DbSet<security_Roles> security_Roles { get; set; }
        public DbSet<security_UsersInRoles> security_UsersInRoles { get; set; }
        public DbSet<ServiceBill> ServiceBill { get; set; }
        public DbSet<StaffExpense> StaffExpense { get; set; }
        public DbSet<Status> Status { get; set; }
        public DbSet<Stocks> Stocks { get; set; }
        public DbSet<UserProfile> UserProfile { get; set; }
        public DbSet<Vendors> Vendors { get; set; }
        public DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public DbSet<webpages_Roles> webpages_Roles { get; set; }
        public DbSet<Acc_SalesItems> Acc_SalesItems { get; set; }
        public DbSet<Expense> Expense { get; set; }
        public DbSet<Purchase> Purchase { get; set; }
        public DbSet<PurchaseItems> PurchaseItems { get; set; }
        public DbSet<SalesItems> SalesItems { get; set; }
        public DbSet<SalesPurchase> SalesPurchase { get; set; }
        public DbSet<SalesPurchaseItems> SalesPurchaseItems { get; set; }
        public DbSet<ServiceItems> ServiceItems { get; set; }
        public DbSet<webpages_Membership> webpages_Membership { get; set; }
    
        public virtual int sp_frm_add_upd_Acc_Bill_ActualCost(string receiptNo, Nullable<decimal> actualCost, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var actualCostParameter = actualCost.HasValue ?
                new ObjectParameter("ActualCost", actualCost) :
                new ObjectParameter("ActualCost", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Acc_Bill_ActualCost", receiptNoParameter, actualCostParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Acc_Sales_Bill(string receiptNo, Nullable<int> vendorCode, Nullable<decimal> netAmount, Nullable<System.DateTime> serviceDate, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Acc_Sales_Bill", receiptNoParameter, vendorCodeParameter, netAmountParameter, serviceDateParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Acc_Sales_Bill_Items(string receiptNo, string modelNo, string remarks, Nullable<double> quantity, Nullable<decimal> amount, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Acc_Sales_Bill_Items", receiptNoParameter, modelNoParameter, remarksParameter, quantityParameter, amountParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Acc_Vendors(Nullable<int> vendorCode, string vendorName, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Acc_Vendors", vendorCodeParameter, vendorNameParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_AccSalesPayment(Nullable<int> vendorCode, Nullable<System.DateTime> paymentDate, Nullable<double> paymentAmount)
        {
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(System.DateTime));
    
            var paymentAmountParameter = paymentAmount.HasValue ?
                new ObjectParameter("PaymentAmount", paymentAmount) :
                new ObjectParameter("PaymentAmount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_AccSalesPayment", vendorCodeParameter, paymentDateParameter, paymentAmountParameter);
        }
    
        public virtual int sp_frm_add_upd_Bill(string receiptNo, string customerName, string contactNo, string modelNo, string natureFault, string problemDesc, Nullable<int> statusCode, string techRemark, Nullable<decimal> advanceAmount, string paymentType, string passwordType, string password, Nullable<System.DateTime> serviceDate, string nRICNo, Nullable<int> brandCode, Nullable<int> colorCode, string technicianName, string iMEINo, Nullable<int> outSourceCode, Nullable<decimal> gSTAmount, Nullable<decimal> estimateAmount, Nullable<decimal> discountAmount, Nullable<decimal> netAmount, Nullable<int> companyID, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var natureFaultParameter = natureFault != null ?
                new ObjectParameter("NatureFault", natureFault) :
                new ObjectParameter("NatureFault", typeof(string));
    
            var problemDescParameter = problemDesc != null ?
                new ObjectParameter("ProblemDesc", problemDesc) :
                new ObjectParameter("ProblemDesc", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var techRemarkParameter = techRemark != null ?
                new ObjectParameter("TechRemark", techRemark) :
                new ObjectParameter("TechRemark", typeof(string));
    
            var advanceAmountParameter = advanceAmount.HasValue ?
                new ObjectParameter("AdvanceAmount", advanceAmount) :
                new ObjectParameter("AdvanceAmount", typeof(decimal));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var passwordTypeParameter = passwordType != null ?
                new ObjectParameter("PasswordType", passwordType) :
                new ObjectParameter("PasswordType", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            var nRICNoParameter = nRICNo != null ?
                new ObjectParameter("NRICNo", nRICNo) :
                new ObjectParameter("NRICNo", typeof(string));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var colorCodeParameter = colorCode.HasValue ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(int));
    
            var technicianNameParameter = technicianName != null ?
                new ObjectParameter("TechnicianName", technicianName) :
                new ObjectParameter("TechnicianName", typeof(string));
    
            var iMEINoParameter = iMEINo != null ?
                new ObjectParameter("IMEINo", iMEINo) :
                new ObjectParameter("IMEINo", typeof(string));
    
            var outSourceCodeParameter = outSourceCode.HasValue ?
                new ObjectParameter("OutSourceCode", outSourceCode) :
                new ObjectParameter("OutSourceCode", typeof(int));
    
            var gSTAmountParameter = gSTAmount.HasValue ?
                new ObjectParameter("GSTAmount", gSTAmount) :
                new ObjectParameter("GSTAmount", typeof(decimal));
    
            var estimateAmountParameter = estimateAmount.HasValue ?
                new ObjectParameter("EstimateAmount", estimateAmount) :
                new ObjectParameter("EstimateAmount", typeof(decimal));
    
            var discountAmountParameter = discountAmount.HasValue ?
                new ObjectParameter("DiscountAmount", discountAmount) :
                new ObjectParameter("DiscountAmount", typeof(decimal));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Bill", receiptNoParameter, customerNameParameter, contactNoParameter, modelNoParameter, natureFaultParameter, problemDescParameter, statusCodeParameter, techRemarkParameter, advanceAmountParameter, paymentTypeParameter, passwordTypeParameter, passwordParameter, serviceDateParameter, nRICNoParameter, brandCodeParameter, colorCodeParameter, technicianNameParameter, iMEINoParameter, outSourceCodeParameter, gSTAmountParameter, estimateAmountParameter, discountAmountParameter, netAmountParameter, companyIDParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Bill_ActualCost(string receiptNo, Nullable<decimal> actualCost, Nullable<int> companyID, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var actualCostParameter = actualCost.HasValue ?
                new ObjectParameter("ActualCost", actualCost) :
                new ObjectParameter("ActualCost", typeof(decimal));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Bill_ActualCost", receiptNoParameter, actualCostParameter, companyIDParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Bill_Items(string receiptNo, Nullable<int> brandCode, string modelNo, Nullable<int> colorCode, Nullable<int> itemCode, Nullable<double> quantity, Nullable<decimal> sellingPrice, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var colorCodeParameter = colorCode.HasValue ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(int));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var sellingPriceParameter = sellingPrice.HasValue ?
                new ObjectParameter("SellingPrice", sellingPrice) :
                new ObjectParameter("SellingPrice", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Bill_Items", receiptNoParameter, brandCodeParameter, modelNoParameter, colorCodeParameter, itemCodeParameter, quantityParameter, sellingPriceParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Brand(Nullable<int> brandCode, string brandName, string brandDesc, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var brandDescParameter = brandDesc != null ?
                new ObjectParameter("BrandDesc", brandDesc) :
                new ObjectParameter("BrandDesc", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Brand", brandCodeParameter, brandNameParameter, brandDescParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Category(Nullable<int> categoryCode, string categoryName, string categoryDesc, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var categoryDescParameter = categoryDesc != null ?
                new ObjectParameter("CategoryDesc", categoryDesc) :
                new ObjectParameter("CategoryDesc", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Category", categoryCodeParameter, categoryNameParameter, categoryDescParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Color(Nullable<int> colorCode, string colorName, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var colorCodeParameter = colorCode.HasValue ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(int));
    
            var colorNameParameter = colorName != null ?
                new ObjectParameter("ColorName", colorName) :
                new ObjectParameter("ColorName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Color", colorCodeParameter, colorNameParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Company(Nullable<int> companyID, string companyName, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Company", companyIDParameter, companyNameParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Expense(Nullable<int> vendorCode, Nullable<int> expenseCode, string expenseName, Nullable<decimal> charge, string remarks, Nullable<int> userId, string pageName)
        {
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var expenseCodeParameter = expenseCode.HasValue ?
                new ObjectParameter("ExpenseCode", expenseCode) :
                new ObjectParameter("ExpenseCode", typeof(int));
    
            var expenseNameParameter = expenseName != null ?
                new ObjectParameter("ExpenseName", expenseName) :
                new ObjectParameter("ExpenseName", typeof(string));
    
            var chargeParameter = charge.HasValue ?
                new ObjectParameter("Charge", charge) :
                new ObjectParameter("Charge", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Expense", vendorCodeParameter, expenseCodeParameter, expenseNameParameter, chargeParameter, remarksParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_ExpenseVendors(Nullable<int> vendorCode, string vendorName, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_ExpenseVendors", vendorCodeParameter, vendorNameParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Item(Nullable<int> itemCode, string itemName, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(int));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Item", itemCodeParameter, itemNameParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Model(string modelNo, string modelDesc, Nullable<int> brandCode, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var modelDescParameter = modelDesc != null ?
                new ObjectParameter("ModelDesc", modelDesc) :
                new ObjectParameter("ModelDesc", typeof(string));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Model", modelNoParameter, modelDescParameter, brandCodeParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_OutSources(Nullable<int> outSourceCode, string outSourceName, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var outSourceCodeParameter = outSourceCode.HasValue ?
                new ObjectParameter("OutSourceCode", outSourceCode) :
                new ObjectParameter("OutSourceCode", typeof(int));
    
            var outSourceNameParameter = outSourceName != null ?
                new ObjectParameter("OutSourceName", outSourceName) :
                new ObjectParameter("OutSourceName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_OutSources", outSourceCodeParameter, outSourceNameParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Purchase(Nullable<int> companyID, string orderNo, Nullable<System.DateTime> purchaseDate, Nullable<int> vendorCode, Nullable<decimal> totalAmount, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var purchaseDateParameter = purchaseDate.HasValue ?
                new ObjectParameter("PurchaseDate", purchaseDate) :
                new ObjectParameter("PurchaseDate", typeof(System.DateTime));
    
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Purchase", companyIDParameter, orderNoParameter, purchaseDateParameter, vendorCodeParameter, totalAmountParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Purchase_Items(string orderNo, Nullable<int> brandCode, string modelNo, Nullable<int> colorCode, Nullable<int> itemCode, Nullable<double> quantity, Nullable<decimal> unitPrice, Nullable<int> userId, string pageName)
        {
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var colorCodeParameter = colorCode.HasValue ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(int));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Purchase_Items", orderNoParameter, brandCodeParameter, modelNoParameter, colorCodeParameter, itemCodeParameter, quantityParameter, unitPriceParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Sales_Account_Bill(string receiptNo, Nullable<int> customerCode, string paymentType, Nullable<System.DateTime> serviceDate, Nullable<decimal> discountAmount, Nullable<decimal> netAmount, Nullable<int> companyID, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var customerCodeParameter = customerCode.HasValue ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(int));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            var discountAmountParameter = discountAmount.HasValue ?
                new ObjectParameter("DiscountAmount", discountAmount) :
                new ObjectParameter("DiscountAmount", typeof(decimal));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Sales_Account_Bill", receiptNoParameter, customerCodeParameter, paymentTypeParameter, serviceDateParameter, discountAmountParameter, netAmountParameter, companyIDParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Sales_Bill(string receiptNo, string customerName, string paymentType, Nullable<System.DateTime> serviceDate, Nullable<decimal> discountAmount, Nullable<decimal> netAmount, Nullable<int> companyID, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            var discountAmountParameter = discountAmount.HasValue ?
                new ObjectParameter("DiscountAmount", discountAmount) :
                new ObjectParameter("DiscountAmount", typeof(decimal));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Sales_Bill", receiptNoParameter, customerNameParameter, paymentTypeParameter, serviceDateParameter, discountAmountParameter, netAmountParameter, companyIDParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Sales_Bill_Items(string receiptNo, Nullable<int> categoryCode, string productCode, string remarks, string serviceBillNo, Nullable<double> quantity, Nullable<decimal> sellingPrice, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var serviceBillNoParameter = serviceBillNo != null ?
                new ObjectParameter("ServiceBillNo", serviceBillNo) :
                new ObjectParameter("ServiceBillNo", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var sellingPriceParameter = sellingPrice.HasValue ?
                new ObjectParameter("SellingPrice", sellingPrice) :
                new ObjectParameter("SellingPrice", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Sales_Bill_Items", receiptNoParameter, categoryCodeParameter, productCodeParameter, remarksParameter, serviceBillNoParameter, quantityParameter, sellingPriceParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Sales_Purchase(Nullable<int> companyID, string orderNo, Nullable<System.DateTime> purchaseDate, Nullable<int> vendorCode, Nullable<decimal> totalAmount, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var purchaseDateParameter = purchaseDate.HasValue ?
                new ObjectParameter("PurchaseDate", purchaseDate) :
                new ObjectParameter("PurchaseDate", typeof(System.DateTime));
    
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Sales_Purchase", companyIDParameter, orderNoParameter, purchaseDateParameter, vendorCodeParameter, totalAmountParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Sales_Purchase_Items(string orderNo, Nullable<int> categoryCode, string productCode, Nullable<double> quantity, Nullable<decimal> unitPrice, Nullable<int> userId, string pageName)
        {
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Sales_Purchase_Items", orderNoParameter, categoryCodeParameter, productCodeParameter, quantityParameter, unitPriceParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Sales_Stock(Nullable<int> companyID, Nullable<int> categoryCode, string productCode, Nullable<double> quantity, Nullable<decimal> unitPrice, Nullable<decimal> sellingPrice, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var sellingPriceParameter = sellingPrice.HasValue ?
                new ObjectParameter("SellingPrice", sellingPrice) :
                new ObjectParameter("SellingPrice", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Sales_Stock", companyIDParameter, categoryCodeParameter, productCodeParameter, quantityParameter, unitPriceParameter, sellingPriceParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_StaffExpense(Nullable<int> tableKey, Nullable<int> staffId, Nullable<System.DateTime> expenseDate, Nullable<double> expenseAmount, string description)
        {
            var tableKeyParameter = tableKey.HasValue ?
                new ObjectParameter("TableKey", tableKey) :
                new ObjectParameter("TableKey", typeof(int));
    
            var staffIdParameter = staffId.HasValue ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(int));
    
            var expenseDateParameter = expenseDate.HasValue ?
                new ObjectParameter("ExpenseDate", expenseDate) :
                new ObjectParameter("ExpenseDate", typeof(System.DateTime));
    
            var expenseAmountParameter = expenseAmount.HasValue ?
                new ObjectParameter("ExpenseAmount", expenseAmount) :
                new ObjectParameter("ExpenseAmount", typeof(double));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_StaffExpense", tableKeyParameter, staffIdParameter, expenseDateParameter, expenseAmountParameter, descriptionParameter);
        }
    
        public virtual int sp_frm_add_upd_Stock(Nullable<int> companyID, Nullable<int> brandCode, string modelNo, Nullable<int> colorCode, Nullable<int> itemCode, Nullable<double> quantity, Nullable<decimal> unitPrice, Nullable<decimal> sellingPrice, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var colorCodeParameter = colorCode.HasValue ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(int));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var sellingPriceParameter = sellingPrice.HasValue ?
                new ObjectParameter("SellingPrice", sellingPrice) :
                new ObjectParameter("SellingPrice", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Stock", companyIDParameter, brandCodeParameter, modelNoParameter, colorCodeParameter, itemCodeParameter, quantityParameter, unitPriceParameter, sellingPriceParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Vendors(Nullable<int> vendorCode, string vendorName, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Vendors", vendorCodeParameter, vendorNameParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_Dashboard(Nullable<System.DateTime> createdDate)
        {
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_Dashboard", createdDateParameter);
        }
    
        public virtual int sp_frm_del_Acc_Sales_Bill_Items(string receiptNo, string modelNo, string remarks, Nullable<int> quantity, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_del_Acc_Sales_Bill_Items", receiptNoParameter, modelNoParameter, remarksParameter, quantityParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_del_Bill_Items(string receiptNo, Nullable<int> brandCode, string modelNo, Nullable<int> colorCode, Nullable<int> itemCode, Nullable<int> quantity, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var colorCodeParameter = colorCode.HasValue ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(int));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_del_Bill_Items", receiptNoParameter, brandCodeParameter, modelNoParameter, colorCodeParameter, itemCodeParameter, quantityParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_del_Purchase_Items(string orderNo, Nullable<int> brandCode, string modelNo, Nullable<int> colorCode, Nullable<int> itemCode, Nullable<int> userId, string pageName)
        {
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var colorCodeParameter = colorCode.HasValue ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(int));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_del_Purchase_Items", orderNoParameter, brandCodeParameter, modelNoParameter, colorCodeParameter, itemCodeParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_del_Sales_Bill_Items(string receiptNo, Nullable<int> categoryCode, string productCode, string remarks, Nullable<int> quantity, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_del_Sales_Bill_Items", receiptNoParameter, categoryCodeParameter, productCodeParameter, remarksParameter, quantityParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_del_Sales_Purchase_Items(string orderNo, Nullable<int> categoryCode, string productCode, Nullable<int> userId, string pageName)
        {
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_del_Sales_Purchase_Items", orderNoParameter, categoryCodeParameter, productCodeParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Acc_Sales_Result> sp_frm_get_Acc_Sales(string receiptNo, Nullable<System.DateTime> serviceDate, string vendorName, Nullable<int> userId, string pageName, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Acc_Sales_Result>("sp_frm_get_Acc_Sales", receiptNoParameter, serviceDateParameter, vendorNameParameter, userIdParameter, pageNameParameter, transactionFromParameter, transactionToParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Acc_Sales_Bill_Items_Result> sp_frm_get_Acc_Sales_Bill_Items(string receiptNo, Nullable<int> modelNo, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var modelNoParameter = modelNo.HasValue ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Acc_Sales_Bill_Items_Result>("sp_frm_get_Acc_Sales_Bill_Items", receiptNoParameter, modelNoParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Acc_Sales_Items_Report_Result> sp_frm_get_Acc_Sales_Items_Report(string receiptNo, string modelNo, string remarks, Nullable<int> vendorCode, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Acc_Sales_Items_Report_Result>("sp_frm_get_Acc_Sales_Items_Report", receiptNoParameter, modelNoParameter, remarksParameter, vendorCodeParameter, transactionFromParameter, transactionToParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Acc_Vendors_Result> sp_frm_get_Acc_Vendors(string vendorName, Nullable<int> userId, string pageName)
        {
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Acc_Vendors_Result>("sp_frm_get_Acc_Vendors", vendorNameParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_AccSales_Payments_Result> sp_frm_get_AccSales_Payments(Nullable<int> vendorCode)
        {
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_AccSales_Payments_Result>("sp_frm_get_AccSales_Payments", vendorCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_frm_get_AccSales_Users(Nullable<int> vendorCode)
        {
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_frm_get_AccSales_Users", vendorCodeParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Bill_Details_Result> sp_frm_get_Bill_Details(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Bill_Details_Result>("sp_frm_get_Bill_Details", customerIdParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Bill_Items_Result> sp_frm_get_Bill_Items(string receiptNo, Nullable<int> itemCode, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Bill_Items_Result>("sp_frm_get_Bill_Items", receiptNoParameter, itemCodeParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Bills_Result> sp_frm_get_Bills(Nullable<int> companyID, string receiptNo, Nullable<int> brandCode, string modelNo, Nullable<System.DateTime> serviceDate, Nullable<int> statusCode, Nullable<int> outSourceCode, string customerName, Nullable<int> userId, string pageName, Nullable<int> parmType)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var outSourceCodeParameter = outSourceCode.HasValue ?
                new ObjectParameter("OutSourceCode", outSourceCode) :
                new ObjectParameter("OutSourceCode", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var parmTypeParameter = parmType.HasValue ?
                new ObjectParameter("ParmType", parmType) :
                new ObjectParameter("ParmType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Bills_Result>("sp_frm_get_Bills", companyIDParameter, receiptNoParameter, brandCodeParameter, modelNoParameter, serviceDateParameter, statusCodeParameter, outSourceCodeParameter, customerNameParameter, userIdParameter, pageNameParameter, parmTypeParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Bills_Report_Result> sp_frm_get_Bills_Report(Nullable<int> companyID, string receiptNo, Nullable<int> brandCode, string modelNo, Nullable<int> statusCode, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> outSourceCode, string remarks, Nullable<int> createdBy, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var outSourceCodeParameter = outSourceCode.HasValue ?
                new ObjectParameter("OutSourceCode", outSourceCode) :
                new ObjectParameter("OutSourceCode", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Bills_Report_Result>("sp_frm_get_Bills_Report", companyIDParameter, receiptNoParameter, brandCodeParameter, modelNoParameter, statusCodeParameter, transactionFromParameter, transactionToParameter, outSourceCodeParameter, remarksParameter, createdByParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Brands_Result> sp_frm_get_Brands(string brandName, Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Brands_Result>("sp_frm_get_Brands", brandNameParameter, userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Categories_Result> sp_frm_get_Categories(string categoryName, Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Categories_Result>("sp_frm_get_Categories", categoryNameParameter, userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Category_Sales_Report_Result> sp_frm_get_Category_Sales_Report(Nullable<int> companyID, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> userId, string pageName, Nullable<int> categoryCode, string productCode, string remarks)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Category_Sales_Report_Result>("sp_frm_get_Category_Sales_Report", companyIDParameter, transactionFromParameter, transactionToParameter, userIdParameter, pageNameParameter, categoryCodeParameter, productCodeParameter, remarksParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Colors_Result> sp_frm_get_Colors(string colorName, Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var colorNameParameter = colorName != null ?
                new ObjectParameter("ColorName", colorName) :
                new ObjectParameter("ColorName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Colors_Result>("sp_frm_get_Colors", colorNameParameter, userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Companies_Result> sp_frm_get_Companies(string companyName, Nullable<int> userId, string pageName)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Companies_Result>("sp_frm_get_Companies", companyNameParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Daily_Sales_Report_Result> sp_frm_get_Daily_Sales_Report(Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> userId, string pageName)
        {
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Daily_Sales_Report_Result>("sp_frm_get_Daily_Sales_Report", transactionFromParameter, transactionToParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Expense_Result> sp_frm_get_Expense(Nullable<int> expenseCode, string expenseName, Nullable<int> vendorCode, Nullable<int> userId, string pageName, Nullable<int> parmType, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo)
        {
            var expenseCodeParameter = expenseCode.HasValue ?
                new ObjectParameter("ExpenseCode", expenseCode) :
                new ObjectParameter("ExpenseCode", typeof(int));
    
            var expenseNameParameter = expenseName != null ?
                new ObjectParameter("ExpenseName", expenseName) :
                new ObjectParameter("ExpenseName", typeof(string));
    
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var parmTypeParameter = parmType.HasValue ?
                new ObjectParameter("ParmType", parmType) :
                new ObjectParameter("ParmType", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Expense_Result>("sp_frm_get_Expense", expenseCodeParameter, expenseNameParameter, vendorCodeParameter, userIdParameter, pageNameParameter, parmTypeParameter, transactionFromParameter, transactionToParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_ExpenseVendors_Result> sp_frm_get_ExpenseVendors(string vendorName, Nullable<int> userId, string pageName)
        {
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_ExpenseVendors_Result>("sp_frm_get_ExpenseVendors", vendorNameParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Items_Result> sp_frm_get_Items(string itemName, Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Items_Result>("sp_frm_get_Items", itemNameParameter, userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Models_Result> sp_frm_get_Models(Nullable<int> brandCode, string modelDesc, Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelDescParameter = modelDesc != null ?
                new ObjectParameter("ModelDesc", modelDesc) :
                new ObjectParameter("ModelDesc", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Models_Result>("sp_frm_get_Models", brandCodeParameter, modelDescParameter, userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Monthly_Sales_Report_Result> sp_frm_get_Monthly_Sales_Report(Nullable<int> userId, string pageName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Monthly_Sales_Report_Result>("sp_frm_get_Monthly_Sales_Report", userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_OutSources_Result> sp_frm_get_OutSources(string outSourceName, Nullable<int> userId, string pageName)
        {
            var outSourceNameParameter = outSourceName != null ?
                new ObjectParameter("OutSourceName", outSourceName) :
                new ObjectParameter("OutSourceName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_OutSources_Result>("sp_frm_get_OutSources", outSourceNameParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Acc_Vendors_Result> sp_frm_get_parm_Acc_Vendors(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Acc_Vendors_Result>("sp_frm_get_parm_Acc_Vendors", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Brands_Result> sp_frm_get_parm_Brands(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Brands_Result>("sp_frm_get_parm_Brands", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Categories_Result> sp_frm_get_parm_Categories(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Categories_Result>("sp_frm_get_parm_Categories", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Colors_Result> sp_frm_get_parm_Colors(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Colors_Result>("sp_frm_get_parm_Colors", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Companies_Result> sp_frm_get_parm_Companies(Nullable<int> userId, string pageName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Companies_Result>("sp_frm_get_parm_Companies", userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_ExpenseVendors_Result> sp_frm_get_parm_ExpenseVendors(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_ExpenseVendors_Result>("sp_frm_get_parm_ExpenseVendors", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Items_Result> sp_frm_get_parm_Items(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Items_Result>("sp_frm_get_parm_Items", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Models_Result> sp_frm_get_parm_Models(Nullable<int> brandCode, Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Models_Result>("sp_frm_get_parm_Models", brandCodeParameter, userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<string> sp_frm_get_parm_Models_Bill(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_frm_get_parm_Models_Bill", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_OutSources_Result> sp_frm_get_parm_OutSources(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_OutSources_Result>("sp_frm_get_parm_OutSources", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Products_Result> sp_frm_get_parm_Products(Nullable<int> categoryCode, Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Products_Result>("sp_frm_get_parm_Products", categoryCodeParameter, userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<string> sp_frm_get_parm_Remarks(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_frm_get_parm_Remarks", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<string> sp_frm_get_parm_Remarks_Service(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_frm_get_parm_Remarks_Service", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Parm_Status_Result> sp_frm_get_Parm_Status(Nullable<int> userId, string pageName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Parm_Status_Result>("sp_frm_get_Parm_Status", userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Parm_Users_Result> sp_frm_get_Parm_Users(Nullable<int> userId, string pageName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Parm_Users_Result>("sp_frm_get_Parm_Users", userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Vendors_Result> sp_frm_get_parm_Vendors(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Vendors_Result>("sp_frm_get_parm_Vendors", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Product_Sales_Report_Result> sp_frm_get_Product_Sales_Report(Nullable<int> companyID, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> userId, string pageName, Nullable<int> categoryCode, string productCode, string remarks)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Product_Sales_Report_Result>("sp_frm_get_Product_Sales_Report", companyIDParameter, transactionFromParameter, transactionToParameter, userIdParameter, pageNameParameter, categoryCodeParameter, productCodeParameter, remarksParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Products_Result> sp_frm_get_Products(Nullable<int> categoryCode, string productDesc, Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productDescParameter = productDesc != null ?
                new ObjectParameter("ProductDesc", productDesc) :
                new ObjectParameter("ProductDesc", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Products_Result>("sp_frm_get_Products", categoryCodeParameter, productDescParameter, userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual int sp_frm_get_Products_Report(Nullable<int> companyID, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> categoryCode, string productCode, string remarks, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_get_Products_Report", companyIDParameter, transactionFromParameter, transactionToParameter, categoryCodeParameter, productCodeParameter, remarksParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Products_Report_Temp_Result> sp_frm_get_Products_Report_Temp(Nullable<int> companyID, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> categoryCode, string productCode, string remarks, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Products_Report_Temp_Result>("sp_frm_get_Products_Report_Temp", companyIDParameter, transactionFromParameter, transactionToParameter, categoryCodeParameter, productCodeParameter, remarksParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Products_Report_Temp2_Result> sp_frm_get_Products_Report_Temp2(Nullable<int> companyID, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> categoryCode, string productCode, string remarks, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Products_Report_Temp2_Result>("sp_frm_get_Products_Report_Temp2", companyIDParameter, transactionFromParameter, transactionToParameter, categoryCodeParameter, productCodeParameter, remarksParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Purchase_Items_Result> sp_frm_get_Purchase_Items(string orderNo, Nullable<int> userId, string pageName)
        {
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Purchase_Items_Result>("sp_frm_get_Purchase_Items", orderNoParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Purchases_Result> sp_frm_get_Purchases(Nullable<int> companyID, Nullable<int> vendorCode, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, string orderNo, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Purchases_Result>("sp_frm_get_Purchases", companyIDParameter, vendorCodeParameter, transactionFromParameter, transactionToParameter, orderNoParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Sales_Result> sp_frm_get_Sales(Nullable<int> companyID, string receiptNo, Nullable<System.DateTime> serviceDate, string customerName, Nullable<int> userId, string pageName, Nullable<int> parmType, string paymentType)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var parmTypeParameter = parmType.HasValue ?
                new ObjectParameter("ParmType", parmType) :
                new ObjectParameter("ParmType", typeof(int));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Sales_Result>("sp_frm_get_Sales", companyIDParameter, receiptNoParameter, serviceDateParameter, customerNameParameter, userIdParameter, pageNameParameter, parmTypeParameter, paymentTypeParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Sales_Bill_Details_Result> sp_frm_get_Sales_Bill_Details(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Sales_Bill_Details_Result>("sp_frm_get_Sales_Bill_Details", customerIdParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Sales_Bill_Items_Result> sp_frm_get_Sales_Bill_Items(string receiptNo, Nullable<int> productCode, Nullable<int> userId, string pageName)
        {
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var productCodeParameter = productCode.HasValue ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Sales_Bill_Items_Result>("sp_frm_get_Sales_Bill_Items", receiptNoParameter, productCodeParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Sales_Items_Report_Result> sp_frm_get_Sales_Items_Report(Nullable<int> companyID, string receiptNo, Nullable<int> categoryCode, string productCode, string remarks, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Sales_Items_Report_Result>("sp_frm_get_Sales_Items_Report", companyIDParameter, receiptNoParameter, categoryCodeParameter, productCodeParameter, remarksParameter, transactionFromParameter, transactionToParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Sales_Purchase_Items_Result> sp_frm_get_Sales_Purchase_Items(string orderNo, Nullable<int> userId, string pageName)
        {
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Sales_Purchase_Items_Result>("sp_frm_get_Sales_Purchase_Items", orderNoParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Sales_Purchases_Result> sp_frm_get_Sales_Purchases(Nullable<int> companyID, Nullable<int> vendorCode, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, string orderNo, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Sales_Purchases_Result>("sp_frm_get_Sales_Purchases", companyIDParameter, vendorCodeParameter, transactionFromParameter, transactionToParameter, orderNoParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Sales_Report_Result> sp_frm_get_Sales_Report(Nullable<int> companyID, string receiptNo, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> userId, string pageName, string productCode, string remarks, string paymentType, Nullable<int> createdBy)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Sales_Report_Result>("sp_frm_get_Sales_Report", companyIDParameter, receiptNoParameter, transactionFromParameter, transactionToParameter, userIdParameter, pageNameParameter, productCodeParameter, remarksParameter, paymentTypeParameter, createdByParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Sales_Stock_Items_Result> sp_frm_get_Sales_Stock_Items(string productCode, Nullable<int> userId, string pageName)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Sales_Stock_Items_Result>("sp_frm_get_Sales_Stock_Items", productCodeParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Sales_Stocks_Result> sp_frm_get_Sales_Stocks(Nullable<int> companyID, Nullable<int> categoryCode, string productCode, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Sales_Stocks_Result>("sp_frm_get_Sales_Stocks", companyIDParameter, categoryCodeParameter, productCodeParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Service_Report_Result> sp_frm_get_Service_Report(Nullable<int> companyID, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, string productCode, string remarks, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Service_Report_Result>("sp_frm_get_Service_Report", companyIDParameter, transactionFromParameter, transactionToParameter, productCodeParameter, remarksParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_get_SparesStock_Report(Nullable<int> companyID, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_get_SparesStock_Report", companyIDParameter, transactionFromParameter, transactionToParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Staff_Expense_Result> sp_frm_get_Staff_Expense(Nullable<int> staffId, Nullable<int> userId, string pageName, Nullable<int> parmType, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo)
        {
            var staffIdParameter = staffId.HasValue ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var parmTypeParameter = parmType.HasValue ?
                new ObjectParameter("ParmType", parmType) :
                new ObjectParameter("ParmType", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Staff_Expense_Result>("sp_frm_get_Staff_Expense", staffIdParameter, userIdParameter, pageNameParameter, parmTypeParameter, transactionFromParameter, transactionToParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Stock_Items_Result> sp_frm_get_Stock_Items(string modelNo, Nullable<int> userId, string pageName)
        {
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Stock_Items_Result>("sp_frm_get_Stock_Items", modelNoParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Stocks_Result> sp_frm_get_Stocks(Nullable<int> companyID, Nullable<int> brandCode, string modelNo, Nullable<int> colorCode, Nullable<int> itemCode, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var colorCodeParameter = colorCode.HasValue ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(int));
    
            var itemCodeParameter = itemCode.HasValue ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Stocks_Result>("sp_frm_get_Stocks", companyIDParameter, brandCodeParameter, modelNoParameter, colorCodeParameter, itemCodeParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Category_Sales_Result> sp_frm_get_Today_Category_Sales(Nullable<int> companyID, Nullable<int> userId, string pageName, Nullable<System.DateTime> startDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Category_Sales_Result>("sp_frm_get_Today_Category_Sales", companyIDParameter, userIdParameter, pageNameParameter, startDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Details_Result> sp_frm_get_Today_Details(Nullable<int> customerId, Nullable<System.DateTime> startDate)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Details_Result>("sp_frm_get_Today_Details", customerIdParameter, startDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Details_Report_Result> sp_frm_get_Today_Details_Report(Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> customerId, Nullable<int> userId, string pageName)
        {
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Details_Report_Result>("sp_frm_get_Today_Details_Report", transactionFromParameter, transactionToParameter, customerIdParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Expense_Result> sp_frm_get_Today_Expense(Nullable<int> companyID, Nullable<int> userId, string pageName, Nullable<System.DateTime> startDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Expense_Result>("sp_frm_get_Today_Expense", companyIDParameter, userIdParameter, pageNameParameter, startDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Product_Sales_Result> sp_frm_get_Today_Product_Sales(Nullable<int> companyID, Nullable<int> userId, string pageName, Nullable<System.DateTime> startDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Product_Sales_Result>("sp_frm_get_Today_Product_Sales", companyIDParameter, userIdParameter, pageNameParameter, startDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Purchase_Result> sp_frm_get_Today_Purchase(Nullable<int> companyID, Nullable<int> userId, string pageName, Nullable<System.DateTime> startDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Purchase_Result>("sp_frm_get_Today_Purchase", companyIDParameter, userIdParameter, pageNameParameter, startDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Purchase_Expense_Result> sp_frm_get_Today_Purchase_Expense(Nullable<int> companyID, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Purchase_Expense_Result>("sp_frm_get_Today_Purchase_Expense", companyIDParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Service_Details_Result> sp_frm_get_Today_Service_Details(Nullable<int> customerId, Nullable<System.DateTime> startDate)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Service_Details_Result>("sp_frm_get_Today_Service_Details", customerIdParameter, startDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Service_Items_Result> sp_frm_get_Today_Service_Items(Nullable<int> companyID, Nullable<int> userId, string pageName, Nullable<System.DateTime> startDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Service_Items_Result>("sp_frm_get_Today_Service_Items", companyIDParameter, userIdParameter, pageNameParameter, startDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Service_Status_Result> sp_frm_get_Today_Service_Status(Nullable<int> companyID, Nullable<int> userId, string pageName, Nullable<System.DateTime> startDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Service_Status_Result>("sp_frm_get_Today_Service_Status", companyIDParameter, userIdParameter, pageNameParameter, startDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Vendors_Result> sp_frm_get_Vendors(string vendorName, Nullable<int> userId, string pageName)
        {
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Vendors_Result>("sp_frm_get_Vendors", vendorNameParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_Security_get_parm_Users_Result> sp_frm_Security_get_parm_Users(Nullable<int> userId, string pageName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_Security_get_parm_Users_Result>("sp_frm_Security_get_parm_Users", userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<string> sp_frm_Security_get_UserHomePage(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_frm_Security_get_UserHomePage", userIdParameter);
        }
    
        public virtual ObjectResult<sp_frm_Security_get_Users_Result> sp_frm_Security_get_Users(Nullable<int> companyID, string firstName, string roleName, Nullable<short> isActive, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(short));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_Security_get_Users_Result>("sp_frm_Security_get_Users", companyIDParameter, firstNameParameter, roleNameParameter, isActiveParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_Security_TreeViewMenu_Result> sp_frm_Security_TreeViewMenu(Nullable<int> userId, string menu, Nullable<int> parentID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var menuParameter = menu != null ?
                new ObjectParameter("Menu", menu) :
                new ObjectParameter("Menu", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_Security_TreeViewMenu_Result>("sp_frm_Security_TreeViewMenu", userIdParameter, menuParameter, parentIDParameter);
        }
    
        public virtual int sp_frm_add_upd_Condition(Nullable<int> conditionCode, string conditionName, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var conditionCodeParameter = conditionCode.HasValue ?
                new ObjectParameter("ConditionCode", conditionCode) :
                new ObjectParameter("ConditionCode", typeof(int));
    
            var conditionNameParameter = conditionName != null ?
                new ObjectParameter("ConditionName", conditionName) :
                new ObjectParameter("ConditionName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Condition", conditionCodeParameter, conditionNameParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Fault(Nullable<int> faultCode, string faultName, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var faultCodeParameter = faultCode.HasValue ?
                new ObjectParameter("FaultCode", faultCode) :
                new ObjectParameter("FaultCode", typeof(int));
    
            var faultNameParameter = faultName != null ?
                new ObjectParameter("FaultName", faultName) :
                new ObjectParameter("FaultName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Fault", faultCodeParameter, faultNameParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Condition_Result> sp_frm_get_Condition(string conditionName, Nullable<int> userId, string pageName)
        {
            var conditionNameParameter = conditionName != null ?
                new ObjectParameter("ConditionName", conditionName) :
                new ObjectParameter("ConditionName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Condition_Result>("sp_frm_get_Condition", conditionNameParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Fault_Result> sp_frm_get_Fault(string faultName, Nullable<int> userId, string pageName)
        {
            var faultNameParameter = faultName != null ?
                new ObjectParameter("FaultName", faultName) :
                new ObjectParameter("FaultName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Fault_Result>("sp_frm_get_Fault", faultNameParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Condition_Result> sp_frm_get_parm_Condition(Nullable<int> userId, string pageName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Condition_Result>("sp_frm_get_parm_Condition", userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Fault_Result> sp_frm_get_parm_Fault(Nullable<int> userId, string pageName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Fault_Result>("sp_frm_get_parm_Fault", userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Product(Nullable<int> productID, string productCode, string productDesc, Nullable<int> categoryCode, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productDescParameter = productDesc != null ?
                new ObjectParameter("ProductDesc", productDesc) :
                new ObjectParameter("ProductDesc", typeof(string));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Product", productIDParameter, productCodeParameter, productDescParameter, categoryCodeParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Daily_Service_Report_Result> sp_frm_get_Daily_Service_Report(Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> userId, string pageName)
        {
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Daily_Service_Report_Result>("sp_frm_get_Daily_Service_Report", transactionFromParameter, transactionToParameter, userIdParameter, pageNameParameter);
        }
    }
}
